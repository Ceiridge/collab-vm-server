image: Visual Studio 2019
platform: x64
skip_tags: true
environment:
  # Always save the cache because there isn't enough time
  # to build both the dependencies and the collab-vm-server
  APPVEYOR_SAVE_CACHE_ON_ERROR: true
  access_token:
    secure: /1wKmhBRo1sCNw9MG237fBihMhCJIMVajWI4BgTKQm39r7J6StfkJFg26TVkK/Qv
pull_requests:
  do_not_increment_build_number: true
install:
  # Clone submodules
  - git submodule update --init --recursive
  # Update vcpkg
  - git -C C:\Tools\vcpkg\ pull
  - C:\Tools\vcpkg\bootstrap-vcpkg.bat
  # Install dependencies
  - vcpkg.exe install --triplet %PLATFORM%-windows cairo libjpeg-turbo sqlite3 libpng openssl pthreads
  # Upgrade dependencies if they were cached
  - vcpkg.exe upgrade --triplet %PLATFORM%-windows --no-dry-run
cache: 
  - C:\Tools\vcpkg\installed\
build_script:
  - mkdir build
  - cd build
  - cmake -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=%APPVEYOR_BUILD_FOLDER%/install/ -DCMAKE_TOOLCHAIN_FILE=C:/Tools/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=%PLATFORM%-windows ..
  - cmake --build . --target install --config RelWithDebInfo
  # Vcpkg should automatically copy any necessary DLLs,
  # but it doesn't so manually copy them
  - ps: $vswhere = join-path ${env:ProgramFiles(x86)} 'Microsoft Visual Studio\Installer\vswhere.exe'; $vspath = &$vswhere -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath; $vspath = join-path $vspath 'Common7\Tools\vsdevcmd.bat'; $dumpbin = cmd /s /c """$vspath"">nul && where dumpbin.exe"; cd "$env:APPVEYOR_BUILD_FOLDER/install/"; $missingDLLs = $true; while ($missingDLLs) { $missingDLLs = ls | %{ &$dumpbin /dependents /nologo $_.Name } | sls '\S+\.dll' | %{ $_.matches[0].Value } | select -unique | ?{ -not (test-path $_) } | %{ ls C:\Tools\vcpkg\installed\x64-windows\debug\ -rec -incl $_ } | %{ cp $_; $_ } }
  # Find and copy VNC demo into install directory
  - ps: ls -rec -incl example.exe "$env:APPVEYOR_BUILD_FOLDER/build/" | select -first 1 | cp -dest "$env:APPVEYOR_BUILD_FOLDER/install/vnc-demo.exe"
  # Download and extract web-app
  - wsl wget https://github.com/Cosmic-Sans/collab-vm-web-app/releases/download/prerelease/web-app.tar.gz
  - wsl tar xfz web-app.tar.gz --directory=../install/
artifacts:
  - path: install/
    name: collab-vm-win64
before_deploy:
    # Move the tag to the most recent commit, but delete it first
    # so GitHub updates the timestamp of the release
  - git config --global credential.helper store
  - ps: Add-Content "$HOME\.git-credentials" "https://$($env:access_token):x-oauth-basic@github.com`n"
  - git push --delete origin prerelease
  - git tag --force prerelease HEAD
  - git push --force --tags origin prerelease
deploy:
  provider: GitHub
  tag: prerelease
  artifact: collab-vm-win64
  prerelease: true
  draft: false
  force_update: true
  on:
    branch: master
  auth_token:
    secure: /1wKmhBRo1sCNw9MG237fBihMhCJIMVajWI4BgTKQm39r7J6StfkJFg26TVkK/Qv
